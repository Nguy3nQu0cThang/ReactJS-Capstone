// src/component/BookingPage/BookingScheduleList.jsx
import React, { useState, useEffect, useMemo } from "react";
import dayjs from "dayjs";

const BookingScheduleList = ({
  selectedMovie,
  selectedBranch,
  selectedShowtime,
  onSelectShowtime,
}) => {
  const [selectedDate, setSelectedDate] = useState(null);

  // ‚úÖ T√¨m phim ƒëang ch·ªçn trong c·ª•m r·∫°p
  const movieInBranch = useMemo(() => {
    if (!selectedMovie || !selectedBranch) return null;
    return selectedBranch.danhSachPhim.find(
      (phim) => phim.maPhim === selectedMovie.maPhim
    );
  }, [selectedMovie, selectedBranch]);

  // ‚úÖ Gom l·ªãch chi·∫øu theo ng√†y
  const showtimesByDate = useMemo(() => {
    if (!movieInBranch) return {};
    return movieInBranch.lstLichChieuTheoPhim.reduce((acc, lich) => {
      const date = dayjs(lich.ngayChieuGioChieu).format("YYYY-MM-DD");
      if (!acc[date]) acc[date] = [];
      acc[date].push(lich);
      return acc;
    }, {});
  }, [movieInBranch]);

  const dates = Object.keys(showtimesByDate);

  // ‚úÖ Khi thay ƒë·ªïi phim ho·∫∑c c·ª•m r·∫°p ‚Üí ch·ªçn l·∫°i ng√†y ƒë·∫ßu ti√™n (n·∫øu c√≥)
  useEffect(() => {
    if (dates.length > 0) {
      // N·∫øu ng√†y c≈© kh√¥ng c√≤n h·ª£p l·ªá th√¨ set ng√†y ƒë·∫ßu ti√™n
      if (!dates.includes(selectedDate)) {
        setSelectedDate(dates[0]);
      }
    } else {
      setSelectedDate(null);
    }
  }, [selectedMovie, selectedBranch, dates]);

  // üü° Tr∆∞·ªùng h·ª£p ch∆∞a ch·ªçn phim ho·∫∑c c·ª•m r·∫°p
  if (!selectedMovie || !selectedBranch) {
    return (
      <div className="text-gray-500 italic">Vui l√≤ng ch·ªçn phim v√† c·ª•m r·∫°p</div>
    );
  }

  // üü° Phim kh√¥ng c√≥ l·ªãch chi·∫øu ·ªü c·ª•m r·∫°p n√†y
  if (!movieInBranch) {
    return (
      <div className="text-gray-500 italic">
        Phim kh√¥ng c√≥ su·∫•t chi·∫øu ·ªü c·ª•m r·∫°p n√†y
      </div>
    );
  }

  return (
    <div className="h-[500px] overflow-y-auto">
      <h3 className="font-semibold mb-2">L·ªãch chi·∫øu</h3>

      {/* Danh s√°ch ng√†y chi·∫øu */}
      <div className="flex gap-2 flex-wrap mb-4">
        {dates.map((date) => (
          <button
            key={date}
            onClick={() => setSelectedDate(date)}
            className={`px-3 py-1 rounded border transition ${
              selectedDate === date
                ? "bg-blue-600 text-white"
                : "bg-white hover:bg-gray-100"
            }`}
          >
            {dayjs(date).format("DD/MM/YYYY")}
          </button>
        ))}
      </div>

      {/* Danh s√°ch su·∫•t chi·∫øu */}
      {selectedDate && (
        <div className="flex gap-2 flex-wrap">
          {showtimesByDate[selectedDate]?.map((showtime) => (
            <button
              key={showtime.maLichChieu}
              onClick={() => onSelectShowtime(showtime)}
              className={`px-3 py-1 rounded border transition ${
                selectedShowtime?.maLichChieu === showtime.maLichChieu
                  ? "bg-green-600 text-white"
                  : "bg-white hover:bg-gray-100"
              }`}
            >
              {dayjs(showtime.ngayChieuGioChieu).format("HH:mm")}
            </button>
          ))}
        </div>
      )}
    </div>
  );
};

export default BookingScheduleList;
